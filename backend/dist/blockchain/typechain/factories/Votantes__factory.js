"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Votantes__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "listaVotantes",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_direccion",
                type: "address",
            },
        ],
        name: "obtenerVotante",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_nombreCompleto",
                type: "string",
            },
            {
                internalType: "string",
                name: "_rut",
                type: "string",
            },
        ],
        name: "registrarVotante",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "totalVotantes",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "votantes",
        outputs: [
            {
                internalType: "string",
                name: "nombreCompleto",
                type: "string",
            },
            {
                internalType: "address",
                name: "direccion",
                type: "address",
            },
            {
                internalType: "string",
                name: "rut",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610c01806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632ec17e9f1461005c578063a92284d01461008c578063c2b0d08e146100be578063d486cd76146100f0578063dfb53e021461010e575b600080fd5b61007660048036038101906100719190610874565b61012a565b6040516100839190610917565b60405180910390f35b6100a660048036038101906100a191906107df565b610169565b6040516100b593929190610932565b60405180910390f35b6100d860048036038101906100d391906107df565b6102c3565b6040516100e793929190610932565b60405180910390f35b6100f86104ad565b6040516101059190610997565b60405180910390f35b61012860048036038101906101239190610808565b6104ba565b005b6001818154811061013a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060205280600052604060002060009150905080600001805461018c90610aa2565b80601f01602080910402602001604051908101604052809291908181526020018280546101b890610aa2565b80156102055780601f106101da57610100808354040283529160200191610205565b820191906000526020600020905b8154815290600101906020018083116101e857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461024090610aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461026c90610aa2565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905083565b60606000606060008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201805461032490610aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461035090610aa2565b801561039d5780601f106103725761010080835404028352916020019161039d565b820191906000526020600020905b81548152906001019060200180831161038057829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461040c90610aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461043890610aa2565b80156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b5050505050815250509050806000015181602001518260400151935093509350509193909250565b6000600180549050905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461050890610aa2565b90501461054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190610977565b60405180910390fd5b600060405180606001604052808481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001838152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906105da9291906106aa565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061063e9291906106aa565b509050506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b8280546106b690610aa2565b90600052602060002090601f0160209004810192826106d8576000855561071f565b82601f106106f157805160ff191683800117855561071f565b8280016001018555821561071f579182015b8281111561071e578251825591602001919060010190610703565b5b50905061072c9190610730565b5090565b5b80821115610749576000816000905550600101610731565b5090565b600061076061075b846109d7565b6109b2565b90508281526020810184848401111561077857600080fd5b610783848285610a60565b509392505050565b60008135905061079a81610b9d565b92915050565b600082601f8301126107b157600080fd5b81356107c184826020860161074d565b91505092915050565b6000813590506107d981610bb4565b92915050565b6000602082840312156107f157600080fd5b60006107ff8482850161078b565b91505092915050565b6000806040838503121561081b57600080fd5b600083013567ffffffffffffffff81111561083557600080fd5b610841858286016107a0565b925050602083013567ffffffffffffffff81111561085e57600080fd5b61086a858286016107a0565b9150509250929050565b60006020828403121561088657600080fd5b6000610894848285016107ca565b91505092915050565b6108a681610a24565b82525050565b60006108b782610a08565b6108c18185610a13565b93506108d1818560208601610a6f565b6108da81610b63565b840191505092915050565b60006108f2601c83610a13565b91506108fd82610b74565b602082019050919050565b61091181610a56565b82525050565b600060208201905061092c600083018461089d565b92915050565b6000606082019050818103600083015261094c81866108ac565b905061095b602083018561089d565b818103604083015261096d81846108ac565b9050949350505050565b60006020820190508181036000830152610990816108e5565b9050919050565b60006020820190506109ac6000830184610908565b92915050565b60006109bc6109cd565b90506109c88282610ad4565b919050565b6000604051905090565b600067ffffffffffffffff8211156109f2576109f1610b34565b5b6109fb82610b63565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610a2f82610a36565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610a8d578082015181840152602081019050610a72565b83811115610a9c576000848401525b50505050565b60006002820490506001821680610aba57607f821691505b60208210811415610ace57610acd610b05565b5b50919050565b610add82610b63565b810181811067ffffffffffffffff82111715610afc57610afb610b34565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f456c20766f74616e746520796120667565207265676973747261646f00000000600082015250565b610ba681610a24565b8114610bb157600080fd5b50565b610bbd81610a56565b8114610bc857600080fd5b5056fea2646970667358221220d0f0b71869560e20f89951eaf115c4b2d2efae2037110b558ad2b4120f1915de64736f6c63430008040033";
class Votantes__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Votantes__factory = Votantes__factory;
Votantes__factory.bytecode = _bytecode;
Votantes__factory.abi = _abi;
